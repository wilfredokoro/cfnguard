# Select all load balancers
let all_albs = Resources.*[ Type == "AWS::ElasticLoadBalancingV2::LoadBalancer" ]

# Filter out gateway or network type
let app_albs = %all_albs[ Properties.Type !exists or Properties.Type not in ["gateway", "network"] ]

# Filter out suppressed ones
let albs = %app_albs[ Metadata.guard.SuppressedRules !exists or
                      "ALB_HTTP_DROP_INVALID_HEADER_ENABLED" not in Metadata.guard.SuppressedRules ]

rule ALB_HTTP_DROP_INVALID_HEADER_ENABLED when %albs !empty {
  %albs {
    Properties {
      LoadBalancerAttributes exists
      when LoadBalancerAttributes exists {
        some LoadBalancerAttributes[*] {
          Key == "routing.http.drop_invalid_header_fields.enabled"
          Value == "true"
        <<
          Violation: AWS Application Load Balancers (ALBs) must be configured to drop invalid HTTP headers.
          Fix: Set the ‘LoadBalancerAttribute’ ‘routing.http.drop_invalid_header_fields.enabled’ to ‘true’
        >>
        }
      }
    }
  }
}
