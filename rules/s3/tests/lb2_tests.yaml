##############################################
# ALB_HTTP_DROP_INVALID_HEADER_ENABLED #
##############################################

- name: Empty, SKIP
  input: {}
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: SKIP

- name: No resources, SKIP
  input:
    Resources: {}
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: SKIP

- name: Elastic Load Balancing V2 Resources of type network, SKIP
  input:
    Resources:
      ElbV2Network:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Type: network
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: SKIP

- name: Elastic Load Balancing V2 Resources of type gateway, SKIP
  input:
    Resources:
      ElbV2Network:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Type: gateway
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: SKIP

- name: Rule suppressed, SKIP
  input:
    Resources:
      ElbV2:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Metadata:
          guard:
            SuppressedRules:
              - "ALB_HTTP_DROP_INVALID_HEADER_ENABLED"
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: SKIP

- name: Elastic Load Balancing V2 Resources default to application missing LoadBalancerAttributes, FAIL
  input:
    Resources:
      ElbV2Network:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          IpAddressType: ipv4
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: FAIL

- name: LoadBalancerAttributes have not been provided, FAIL
  input:
    Resources:
      ElbV2:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Type: application
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: FAIL

- name: LoadBalancerAttributes have been provided without the routing.http.drop_invalid_header_fields.enabled attribute (empty list), FAIL
  input:
    Resources:
      ElbV2:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Type: application
          LoadBalancerAttributes: []
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: FAIL

- name: LoadBalancerAttributes have been provided without the routing.http.drop_invalid_header_fields.enabled attribute, FAIL
  input:
    Resources:
      ElbV2:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Type: application
          LoadBalancerAttributes:
            - Key: access_logs.s3.enabled
              Value: "true"
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: FAIL

- name: LoadBalancerAttributes have been provided with the routing.http.drop_invalid_header_fields.enabled attribute set to false, FAIL
  input:
    Resources:
      ElbV2:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Type: application
          LoadBalancerAttributes:
            - Key: routing.http.drop_invalid_header_fields.enabled
              Value: "false"
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: FAIL

      ElbV2:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Type: application
          LoadBalancerAttributes:
            - Key: routing.http.drop_invalid_header_fields.enabled
              Value: "false"
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: FAIL

- name: LoadBalancerAttributes have been provided with the routing.http.drop_invalid_header_fields.enabled attribute set to false on default ALB type, FAIL
  input:
    Resources:
      ElbV2:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          LoadBalancerAttributes:
            - Key: routing.http.drop_invalid_header_fields.enabled
              Value: "false"
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: FAIL

- name: LoadBalancerAttributes have been provided with the routing.http.drop_invalid_header_fields.enabled attribute set to true, PASS
  input:
    Resources:
      ElbV2:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Type: application
          LoadBalancerAttributes:
            - Key: routing.http.drop_invalid_header_fields.enabled
              Value: "true"
  expectations:
    rules:
      ALB_HTTP_DROP_INVALID_HEADER_ENABLED: PASS
